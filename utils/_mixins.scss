// rem with px fallbacks
// example uses:
//    @include font-size (20);
//    @include font-size (20, !important);

// type
@mixin font-size ($n, $important:null) {
  font-size : $n * 1px $important;
  font-size : $n * .1rem $important;
}
@mixin line-height ($n, $important:null) {
  line-height : $n * 1px $important;
  line-height : $n * .1rem $important;
}

// sizing
@mixin height ($n, $important:null) {
  height : $n * 1px $important;
  height : $n * .1rem $important;
}
@mixin min-height ($n, $important:null) {
  min-height : $n * 1px $important;
  min-height : $n * .1rem $important;
}
@mixin max-height ($n, $important:null) {
  max-height : $n * 1px $important;
  max-height : $n * .1rem $important;
}
@mixin width ($n, $important:null) {
  width : $n * 1px $important;
  width : $n * .1rem $important;
} 
@mixin min-width ($n, $important:null) {
  min-width : $n * 1px $important;
  min-width : $n * .1rem $important;
}
@mixin max-width ($n, $important:null) {
  max-width : $n * 1px $important;
  max-width : $n * .1rem $important;
}

//margin
@mixin margin ($t, $r:$t, $b:$t, $l:$r, $important:null) {
  margin : $t * 1px   $r * 1px   $b * 1px   $l * 1px $important;
  margin : $t * .1rem $r * .1rem $b * .1rem $l * .1rem $important;
}
@mixin margin-short ($n, $important:null) {
  margin : $n * 1px $important;
  margin : $n * .1rem $important;
}
@mixin margin-pair ($v, $h, $important:null) {
  margin : $v * 1px $h * 1px $important;
  margin : $v * .1rem $h * .1rem $important;
}
@mixin margin-top ($n, $important:null) {
  margin-top : $n * 1px $important;
  margin-top : $n * .1rem $important;
}
@mixin margin-right ($n, $important:null) {
  margin-right : $n * 1px $important;
  margin-right : $n * .1rem $important;
}
@mixin margin-bottom ($n, $important:null) {
  margin-bottom : $n * 1px $important;
  margin-bottom : $n * .1rem $important;
}
@mixin margin-left ($n, $important:null) {
  margin-left : $n * 1px $important;
  margin-left : $n * .1rem $important;
}

//padding
@mixin padding ($t, $r:$t, $b:$t, $l:$r, $important:null) {
  padding : $t * 1px   $r * 1px   $b * 1px   $l * 1px $important;
  padding : $t * .1rem $r * .1rem $b * .1rem $l * .1rem $important;
}
@mixin padding-short ($n, $important:null) {
  padding : $n * 1px $important;
  padding : $n * .1rem $important;
}
@mixin padding-pair ($v, $h, $important:null) {
  padding : $v * 1px $h * 1px $important;
  padding : $v * .1rem $h * .1rem $important;
}
@mixin padding-top ($n, $important:null) {
  padding-top : $n * 1px $important;
  padding-top : $n * .1rem $important;
}
@mixin padding-right ($n, $important:null) {
  padding-right : $n * 1px $important;
  padding-right : $n * .1rem $important;
}
@mixin padding-bottom ($n, $important:null) {
  padding-bottom : $n * 1px $important;
  padding-bottom : $n * .1rem $important;
}
@mixin padding-left ($n, $important:null) {
  padding-left : $n * 1px $important;
  padding-left : $n * .1rem $important;
}

//positioning
@mixin top  ($n, $important:null) {
  top : $n * 1px $important;
  top : $n * .1rem $important;
}
@mixin right  ($n, $important:null) {
  right : $n * 1px $important;
  right : $n * .1rem $important;
}
@mixin bottom  ($n, $important:null) {
  bottom : $n * 1px $important;
  bottom : $n * .1rem $important;
}
@mixin left  ($n, $important:null) {
  left : $n * 1px $important;
  left : $n * .1rem $important;
}

// retina background images
@mixin background-image-retina($file, $type, $width, $height) {
  background-image: url($file + '.' + $type);
  background-repeat: no-repeat;

  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 144dppx) {
    & {
      background-image: url($file + '@2x.' + $type);
      background-size: $width $height;
    }
  }
}